name: Test/Lint

on:
  push:
    branches:
      # Push will only build on branches that match this name
      # Pull requests will override this, so pushes to pull requests will still build
      - tescovalue
  pull_request:
    branches:
      - master

jobs:

  test-coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install
    - name: Generate coverage report
      run: |
        pytest --cov=changelog_gen --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        yml: ./codecov.yml
        fail_ci_if_error: true

  test-39:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install
    - name: Test with pytest
      run: |
        pytest

  test-310:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: 3.10
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install
    - name: Test with pytest
      run: |
        pytest

  test-311:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.11
      uses: actions/setup-python@v1
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install
    - name: Test with pytest
      run: |
        pytest

  test-312:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.12
      uses: actions/setup-python@v1
      with:
        python-version: 3.12
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install
    - name: Test with pytest
      run: |
        pytest
